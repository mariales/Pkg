(self.webpackChunkapp_studio_enterprise_analytics_dashboard=self.webpackChunkapp_studio_enterprise_analytics_dashboard||[]).push([[1695],{41695:(P,S,o)=>{o.r(S),o.d(S,{COPILOT_INTENT_REPOSITORY_TOKEN:()=>f,CopilotActionCodeGeneratorService:()=>l,CopilotIntentDesignItemRepositoryService:()=>p,CopilotIntentManagerService:()=>u,CopilotSkillCodeGeneratorService:()=>d,CopilotUtilsModule:()=>m,copilotIntentMock:()=>O});var n=o(59131);class p{constructor(){this._designItems=new Map,console.warn("CopilotIntentDesignItemRepositoryService created")}getDesignItem(t){return this._designItems.get(t)}getDesignItems(){return Array.from(this._designItems.values())}setDesignItem(t){this._designItems.set(t.UId,t)}static{this.\u0275fac=function(e){return new(e||p)}}static{this.\u0275prov=n.\u0275\u0275defineInjectable({token:p,factory:p.\u0275fac})}}var c=o(38495),v=o(28399),a=o(62278);const f=new n.InjectionToken("COPILOT_INTENT_REPOSITORY_TOKEN");var h=o(96590),_=o(21018);class l{constructor(){this._copilotActionCodeMaxLength=41,this._defaultNewActionCode="Action",this._sysSettingsService=(0,n.inject)(c.SysSettingsService)}_checkCodeIsUnique(t,e){return t?!t.includes(e):!0}_generateCode(t){if(t.generateFromName){const e=t.name;if(!_.ConfigurationItemCodeGenerationUtils.isTextUsableForCodeGeneration(e))return null;const s=t.prefix+this._defaultNewActionCode;return s+_.ConfigurationItemCodeGenerationUtils.generateCode(e,this._copilotActionCodeMaxLength-s.length)}return h.NameGenerator.generateUnique(this._defaultNewActionCode,t.prefix)}generate(t,e=null){const s={generateFromName:!!e,name:e,prefix:null};return(0,a.from)(this._sysSettingsService.getByCode("SchemaNamePrefix")).pipe((0,a.map)(r=>r.value),(0,a.tap)(r=>s.prefix=r),(0,a.repeat)(s.generateFromName?1:void 0),(0,a.map)(()=>this._generateCode(s)),(0,a.filter)(r=>this._checkCodeIsUnique(t,r)),(0,a.take)(1),(0,a.defaultIfEmpty)(null))}static{this.\u0275fac=function(e){return new(e||l)}}static{this.\u0275prov=n.\u0275\u0275defineInjectable({token:l,factory:l.\u0275fac})}}class d{constructor(){this._copilotSkillCodeMaxLength=41,this._defaultNewSkillCode="Skill",this._sysSettingsService=(0,n.inject)(c.SysSettingsService)}_checkCodeIsUnique(t,e){return t?!t.includes(e):!0}_generateCode(t){if(t.generateFromName){const e=t.name;if(!_.ConfigurationItemCodeGenerationUtils.isTextUsableForCodeGeneration(e))return null;const s=t.prefix+this._defaultNewSkillCode;return s+_.ConfigurationItemCodeGenerationUtils.generateCode(e,this._copilotSkillCodeMaxLength-s.length)}return h.NameGenerator.generateUnique(this._defaultNewSkillCode,t.prefix)}generate(t,e=null){const s={generateFromName:!!e,name:e,prefix:null};return(0,a.from)(this._sysSettingsService.getByCode("SchemaNamePrefix")).pipe((0,a.map)(r=>r.value),(0,a.tap)(r=>s.prefix=r),(0,a.repeat)(s.generateFromName?1:void 0),(0,a.map)(()=>this._generateCode(s)),(0,a.filter)(r=>this._checkCodeIsUnique(t,r)),(0,a.take)(1),(0,a.defaultIfEmpty)(null))}static{this.\u0275fac=function(e){return new(e||d)}}static{this.\u0275prov=n.\u0275\u0275defineInjectable({token:d,factory:d.\u0275fac})}}class u{constructor(){this._repository=(0,n.inject)(f),this._actionCodeGenerator=(0,n.inject)(l),this._skillCodeGenerator=(0,n.inject)(d),this._designRepository=(0,n.inject)(p)}_loadIntentUIdByActionUId(t){return(0,a.from)(c.Model.create("CopilotAction")).pipe((0,a.switchMap)(e=>e.load({attributes:["Intent"],parameters:[{type:c.ModelParameterType.Filter,value:new c.CompareFilter(c.ComparisonType.Equal,new c.ColumnExpression({columnPath:"Id"}),new c.ParameterExpression({value:t}))}]})),(0,a.map)(e=>{const s=e[0]||{};return(0,v.isEmpty)(s)?null:s.Intent?.value}))}_applyActionToIntent(t,e){const r=(t.Actions||[]).findIndex(g=>g.Id===e.Id);if(r===-1)return!1;const i=t.Actions[r];return t.Actions.splice(r,1,{...i,...e}),!0}_applyParameterToIntent(t,e){const s=e.SourceCollection==="InputParameters"?t.InputParameters:t.OutputParameters,r=s.findIndex(i=>i.UId===e.UId);return r!==-1?(s.splice(r,1,{...s[r],...e}),!0):!1}_getSuccessResponse(){return{success:!0}}_getSuccessResponseObservable(){return(0,a.of)(this._getSuccessResponse())}_getDesignIntent(t){return(0,a.of)(this._designRepository.getDesignItem(t))}_getDesignIntents(){return Array.from(this._designRepository.getDesignItems())}_setDesignIntent(t){this._designRepository.setDesignItem(t)}_getIntentByParameterUId(t){for(const e of this._getDesignIntents()){if(e.InputParameters.find(i=>i.UId===t))return(0,a.of)({intent:e,sourceCollection:"InputParameters"});if(e.OutputParameters.find(i=>i.UId===t))return(0,a.of)({intent:e,sourceCollection:"OutputParameters"})}return(0,a.of)({})}getIntent(t){return this._repository.get(t).pipe((0,a.tap)(e=>{this._setDesignIntent(e)}))}getAllSkills(){return this._repository.getAllCodes()}getIntentParameter(t){return this._getIntentByParameterUId(t).pipe((0,a.map)(({intent:e,sourceCollection:s})=>s==="InputParameters"?e.InputParameters:e.OutputParameters),(0,a.map)(e=>e.find(s=>s.UId===t)))}getIntentParameters(t,e){return this._getDesignIntent(t).pipe((0,a.map)(s=>e==="InputParameters"?s.InputParameters:s.OutputParameters))}updateIntentParameter(t){return this._getIntentByParameterUId(t.UId).pipe((0,a.switchMap)(({intent:e,sourceCollection:s})=>(t.SourceCollection=s,this._applyParameterToIntent(e,t)?this._getSuccessResponseObservable():this._getSuccessResponseObservable())))}createIntentParameter(t){return this._getDesignIntent(t.Intent.value).pipe((0,a.map)(e=>((t.SourceCollection==="InputParameters"?e.InputParameters:e.OutputParameters).push(t),this._getSuccessResponse())))}deleteIntentParameter(t){return this._getIntentByParameterUId(t).pipe((0,a.map)(({intent:e,sourceCollection:s})=>{const r=s==="InputParameters"?e?.InputParameters:e?.OutputParameters,i=(r??[]).findIndex(g=>g.UId===t);return i!==-1&&r.splice(i,1),e}),(0,a.switchMap)(e=>this._repository.update(e)))}createIntent(t){return this._repository.create(t.UId).pipe((0,a.map)(e=>(e.UId=t.UId,e.Title=t.Title,e.Code=t.Code,e.Status=t.Status,e.Description=t.Description,e.Prompt=t.Prompt,e.Mode=t.Mode,e)),(0,a.switchMap)(e=>this._repository.update(e)))}updateIntent(t){return(0,a.forkJoin)([this._getDesignIntent(t.UId),this._repository.get(t.UId)]).pipe((0,a.map)(([e,s])=>{const r={...s,...e,...t};return this._setDesignIntent(r),r}),(0,a.switchMap)(e=>this._repository.update(e)))}createAction(t){return this._repository.get(t.Intent.value).pipe((0,a.map)(e=>(e.Actions.push(t),e)),(0,a.switchMap)(e=>this._repository.update(e)))}getActionByUId(t){return this._loadIntentUIdByActionUId(t).pipe((0,a.switchMap)(e=>e?this._repository.get(e).pipe((0,a.map)(s=>s.Actions.filter(r=>r.Id===t)),(0,a.map)(s=>s[0])):(0,a.of)({})))}getIntentByActionUId(t){return this.getActionByUId(t).pipe((0,a.switchMap)(e=>e?.Intent?this.getIntent(e.Intent.value):(0,a.of)({})))}updateAction(t){return this._loadIntentUIdByActionUId(t.Id).pipe((0,a.switchMap)(e=>this._repository.get(e).pipe((0,a.switchMap)(s=>this._applyActionToIntent(s,t)?this._repository.update(s):(0,a.of)({})))))}generateActionCode(t,e=null){return this._actionCodeGenerator.generate(t,e)}generateSkillCode(t,e=null){return this._skillCodeGenerator.generate(t,e)}deleteAction(t,e){return this._repository.get(t).pipe((0,a.map)(s=>(s.Actions=s.Actions.filter(r=>r.Id!==e),s)),(0,a.switchMap)(s=>this._repository.update(s)))}static{this.\u0275fac=function(e){return new(e||u)}}static{this.\u0275prov=n.\u0275\u0275defineInjectable({token:u,factory:u.\u0275fac})}}const O={UId:"uid",Title:"Test intent",Description:"Test description",Code:"CopilotIntent_test",Prompt:null,Status:"InDevelopment",Mode:"Chat",Actions:[{Code:"ActionCode",Id:"ActionIdentifier",UId:"ActionUid",Name:"ActionName",Description:"ActionDescription",Intent:{value:"uid"},ActionType:"actionSchemaTypeUIdA",Params:'{"processSchemaUId":"ProcessSchemaUId"}'}],ExtendParent:!1,PackageUId:"SomePackageUniqueIdentifier"};var I=o(40297);const j={"zh-TW":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"zh-CN":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"vi-VN":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"tr-TR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u0130\u015Flem \u015Femas\u0131 ba\u015Far\u0131l\u0131 bir \u015Fekilde kaydedildi, ancak do\u011Frulama hatalar\u0131 \xE7al\u0131\u015Fmas\u0131n\u0131 engelliyor."}}'),"th-TH":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"sv-SE":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"sq-AL":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Procesi i skem\xEBs u ruajt me sukses, por gabimet e miratimit nuk e lejojn\xEB t\xEB vazhdoj\xEB."}}'),"ro-RO":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Schema de proces a fost salvat\u0103 cu succes, dar erorile de validare o \xEEmpiedic\u0103 s\u0103 ruleze."}}'),"pt-PT":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"pt-BR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"O esquema do processo foi salvo com \xEAxito, mas erros de valida\xE7\xE3o impedem sua execu\xE7\xE3o."}}'),"pl-PL":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Schemat procesu zapisany pomy\u015Blnie, ale b\u0142\u0119dy walidacji uniemo\u017Cliwiaj\u0105 jego uruchomienie."}}'),"nl-NL":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"lv-LV":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Sh\u0113ma ir veiksm\u012Bgi saglab\u0101ta, bet valid\u0101cijas k\u013C\u016Bdas ne\u013Cauj tai tikt izpild\u012Btai."}}'),"ko-KR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"ja-JP":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"it-IT":JSON.parse(`{"Dialog":{"ProcessSchemaSavedWithValidationError":"Lo schema del processo \xE8 stato salvato con successo, ma gli errori di convalida impediscono l'esecuzione."}}`),"id-ID":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Skema proses berhasil disimpan, tetapi kesalahan validasi mencegahnya untuk dijalankan."}}'),"hu-HU":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"hr-HR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Shema procesa je uspje\u0161no spremljena, ali validacijske pogre\u0161ke sprje\u010Davaju njezvo izvr\u0161avanje."}}'),"he-IL":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u05E1\u05DB\u05DE\u05EA \u05D4\u05EA\u05D4\u05DC\u05D9\u05DA \u05E0\u05E9\u05DE\u05E8\u05D4 \u05D1\u05D4\u05E6\u05DC\u05D7\u05D4, \u05D0\u05DA \u05E9\u05D2\u05D9\u05D0\u05D5\u05EA \u05D0\u05D9\u05DE\u05D5\u05EA \u05DE\u05D5\u05E0\u05E2\u05D5\u05EA \u05DE\u05DE\u05E0\u05D4 \u05DC\u05E4\u05E2\u05D5\u05DC."}}'),"fr-FR":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Le sch\xE9ma de processus a \xE9t\xE9 enregistr\xE9 avec succ\xE8s, mais des erreurs de validation emp\xEAchent son ex\xE9cution."}}'),"es-ES":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"El esquema de proceso se guard\xF3 correctamente, pero los errores de validaci\xF3n impiden que se ejecute."}}'),"de-DE":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"Das Prozessschema wurde erfolgreich gespeichert, aber Validierungsfehler verhindern, dass es ausgef\xFChrt wird."}}'),"cs-CZ":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"bg-BG":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u0421\u0445\u0435\u043C\u0430\u0442\u0430 \u043D\u0430 \u043F\u0440\u043E\u0446\u0435\u0441\u0430 \u0435 \u0437\u0430\u043F\u0430\u0437\u0435\u043D\u0430 \u0443\u0441\u043F\u0435\u0448\u043D\u043E, \u043D\u043E \u0433\u0440\u0435\u0448\u043A\u0438 \u043F\u0440\u0438 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0430\u0442\u0430 \u043D\u0435 \u043F\u043E\u0437\u0432\u043E\u043B\u044F\u0432\u0430\u0442 \u0438\u0437\u043F\u044A\u043B\u043D\u0435\u043D\u0438\u0435\u0442\u043E \u0439."}}'),"ar-SA":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u062A\u0645 \u062D\u0641\u0638 \u0645\u062E\u0637\u0637 \u0627\u0644\u0639\u0645\u0644\u064A\u0629 \u0628\u0646\u062C\u0627\u062D\u060C \u0648\u0644\u0643\u0646 \u062A\u0645\u0646\u0639 \u0623\u062E\u0637\u0627\u0621 \u0627\u0644\u062A\u062D\u0642\u0642 \u0645\u0646 \u062A\u0634\u063A\u064A\u0644\u0647."}}'),"en-US":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"The process schema saved successfully, but validation errors prevent it from running."}}'),"uk-UA":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u0421\u0445\u0435\u043C\u0430 \u043F\u0440\u043E\u0446\u0435\u0441\u0443 \u0437\u0431\u0435\u0440\u0435\u0436\u0435\u043D\u0430 \u0443\u0441\u043F\u0456\u0448\u043D\u043E, \u0430\u043B\u0435 \u043F\u043E\u043C\u0438\u043B\u043A\u0438 \u0432\u0430\u043B\u0456\u0434\u0430\u0446\u0456\u0457 \u043F\u0435\u0440\u0435\u0448\u043A\u043E\u0434\u0436\u0430\u044E\u0442\u044C \u0457\u0457 \u0432\u0438\u043A\u043E\u043D\u0430\u043D\u043D\u044E."}}'),"ru-RU":JSON.parse('{"Dialog":{"ProcessSchemaSavedWithValidationError":"\u0421\u0445\u0435\u043C\u0430 \u043F\u0440\u043E\u0446\u0435\u0441\u0441\u0430 \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0430, \u043E\u0434\u043D\u0430\u043A\u043E \u043E\u0448\u0438\u0431\u043A\u0438 \u0432\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u0438 \u043F\u0440\u0435\u043F\u044F\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u0435\u0433\u043E \u0437\u0430\u043F\u0443\u0441\u043A\u0443."}}')};class m{static{this.\u0275fac=function(e){return new(e||m)}}static{this.\u0275mod=n.\u0275\u0275defineNgModule({type:m})}static{this.\u0275inj=n.\u0275\u0275defineInjector({providers:[l,d,p,u],imports:[I.CommonModule,h.CrtLibTranslateModule.forRoot({i18n:j})]})}}(function(){(typeof ngJitMode>"u"||ngJitMode)&&n.\u0275\u0275setNgModuleScope(m,{imports:[I.CommonModule,h.CrtLibTranslateModule]})})()}}]);
